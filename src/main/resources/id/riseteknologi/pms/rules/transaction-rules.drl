package id.riseteknologi.pms.rules;

unit TransactionUnit;

import id.riseteknologi.pms.rule.input.model.Supplier;
import id.riseteknologi.pms.rule.input.model.Transaction;
import id.riseteknologi.pms.rule.output.model.TransactionDecision;

import java.math.BigDecimal;

rule "transaction event"
salience 50
when
	$transaction: /transaction
then
	transactionDecision.setProductId($transaction.getProductId());
end


rule "use rise stock"
salience 45
when
	$rise: /rise[ stock > 0 ]
then
	transactionDecision.setBuy(false);
	System.out.println("Use rise stock");
end

	
rule "rise stock empty find cheapest price and available"
salience 40
when
	$rise: /rise[ stock == 0 ]
	$minimum: BigDecimal() from accumulate(
				/suppliers[ $p : price ],
				min($p))
	$supplier: /suppliers[ price == $minimum ]
then
	transactionDecision.setBuy(true);
	transactionDecision.setSupplierId($supplier.getId());
	System.out.println("minimum " + $minimum);
	System.out.println($supplier.getName() + " " + $supplier.getPrice());
end
